#pragma once
#include <types/types.hpp>

namespace irmc {

	//Marching tetra

	static constexpr u8 mtEdges[] = {
		001, 012, 023, 030, 002, 013
	};

	static constexpr u8 mtEdgeTable[16] = {

		0x00, 0x19, 0x23, 0x3A,
		0x16, 0x0F, 0x35, 0x2C,

		//Mirror

		0x2C, 0x35, 0x0F, 0x16,
		0x3A, 0x23, 0x19, 0x00
	};

	static constexpr u32 mtTriTable[16] = {

		0x000'000, 0x000'043, 0x000'015, 0x534'415,
		0x000'214, 0x123'301, 0x425'045, 0x000'235,

		//Mirror

		0x000'235, 0x425'045, 0x123'301, 0x000'214,
		0x534'415, 0x000'015, 0x000'043, 0x000'000
	};

	//Marching cubes LUT from http://paulbourke.net/geometry/polygonise/
	//But compressed

	static constexpr u8 mcEdges[] = {
		001, 012, 023, 030, 045, 056,
		067, 074, 004, 015, 026, 037
	};

	static constexpr u64 mcEdgeTable[64] = {
		0x30A203109000, 0x70C60550F406, 0xB06A0F90580C, 0xF00E09D03C0A,
		0x29A393099190, 0x69C79549F596, 0xA96B9F89599C, 0xE90F99C93D9A,
		0x13A033339230, 0x53C43573F636, 0x93683FB35A3C, 0xD30C39F33E3A,
		0x0AA1A32A93A0, 0x4AC5A56AF7A6, 0x8A69AFAA5BAC, 0xCA0DA9EA3FAA,
		0x76A663569460, 0x36C26516F066, 0xF66E6FD65C6C, 0xB60A6996386A,
		0x6FA7F34F95F0, 0x2FC3F50FF1F6, 0xEF6FFFCF5DFC, 0xAF0BF98F39FA,
		0x55A453759650, 0x15C05535F256, 0xD56C5FF55E5C, 0x950859B53A5A,
		0x4CA5C36C97C0, 0x0CC1C52CF3C6, 0xCC6DCFEC5FCC, 0x8C09C9AC3BCA,
		0xBCAAC39C98C0, 0xFCCEC5DCFCC6, 0x3C62CF1C50CC, 0x7C06C95C34CA,
		0xA5AB53859950, 0xE5CF55C5FD56, 0x25635F05515C, 0x65075945355A,
		0x9FA8F3BF9AF0, 0xDFCCF5FFFEF6, 0x1F60FF3F52FC, 0x5F04F97F36FA,
		0x86A963A69B60, 0xC6CD65E6FF66, 0x06616F26536C, 0x46056966376A,
		0xFAAEA3DA9CA0, 0xBACAA59AF8A6, 0x7A66AF5A54AC, 0x3A02A91A30AA,
		0xE3AF33C39D30, 0xA3CB3583F936, 0x63673F43553C, 0x23033903313A,
		0xD9AC93F99E90, 0x99C895B9FA96, 0x59649F79569C, 0x19009939329A,
		0xC0AD03E09F00, 0x80C905A0FB06, 0x40650F60570C, 0x00010920330A
	};

	static constexpr u64 mcTriTable[256] = {
		0x000000000000000, 0x000000000000083, 0x000000000000019, 0x000000000981183,
		0x00000000000012A, 0x00000000012A083, 0x00000000002992A, 0x000000A982A8283,
		0x0000000000003B2, 0x0000000008B00B2, 0x00000000023B190, 0x00000098B19B1B2,
		0x000000000BA33A1, 0x0000008BA08A0A1, 0x000000BA93B9390, 0x000000000A8B98A,
		0x000000000000478, 0x000000000734430, 0x000000000847019, 0x000000731471419,
		0x00000000084712A, 0x00000012A304347, 0x00000084790292A, 0x0007942732972A9,
		0x0000000003B2847, 0x000000204B24B47, 0x00000023B847901, 0x0009219B294B47B,
		0x0000007843BA3A1, 0x0007B410414B1BA, 0x000B039BA90B478, 0x0000009BA4B947B,
		0x000000000000954, 0x000000000083954, 0x000000000150054, 0x000000315835854,
		0x00000000095412A, 0x00000049512A308, 0x00000040254252A, 0x0003483543252A5,
		0x00000000023B954, 0x00000049508B0B2, 0x00000023B015054, 0x00048528B258215,
		0x000000954A13A3B, 0x0008BA8A1081495, 0x000B035BA50B540, 0x000000A8B58A548,
		0x000000000579978, 0x000000573953930, 0x000000157017078, 0x000000000357153,
		0x000000A12957978, 0x000573530950A12, 0x000A52857825802, 0x0000003572532A5,
		0x0000003B2789795, 0x00027B920972957, 0x00015717801823B, 0x000000715B17B21,
		0x000A3BA13857958, 0xBA010A7B0509570, 0x570807A50B03BA0, 0x0000000007B5BA5,
		0x000000000000A65, 0x0000000005A6083, 0x0000000005A6901, 0x0000005A6198183,
		0x000000000261165, 0x000000308126165, 0x000000026906965, 0x000328526582598,
		0x000000000A6523B, 0x000000A65B20B08, 0x0000005A623B019, 0x00098B9B21925A6,
		0x00000051365363B, 0x0005B60510B508B, 0x0000590650363B6, 0x000000B9869B659,
		0x0000000004785A6, 0x00000065A473430, 0x0000008475A6190, 0x000794173197A65,
		0x000000478651612, 0x000347304526125, 0x000026065905847, 0x269596329794739,
		0x000000A657843B2, 0x00027B4204725A6, 0x0005A623B478019, 0x5A67B494B9B2921,
		0x0005B63513B5847, 0x04B7B410B5B651B, 0x847B63036065059, 0x0007B947969B659,
		0x00000000064AA49, 0x00000008349A4A6, 0x000000640A60A01, 0x00061A864816831,
		0x000000264124149, 0x000264249129308, 0x000000000426024, 0x000000426824832,
		0x000000B23A64A49, 0x0004A649A28B082, 0x00061A0640163B2, 0x8B121B48161A641,
		0x000B63913936964, 0x641914B618108B1, 0x0000000643603B6, 0x000000000B68648,
		0x00000089A78A7A6, 0x00067A09A0A7073, 0x0001801781A7A67, 0x000000173A71A67,
		0x000867189168126, 0x739093679291269, 0x000000602706780, 0x000000000672732,
		0x000867A89A6823B, 0x9A767A09727B207, 0x23B67A1A7178180, 0x000671A61B17B21,
		0x136B63916867896, 0x000000000B67091, 0x000B603B0706780, 0x0000000000007B6,
		0x00000000000076B, 0x000000000B76308, 0x000000000B76019, 0x000000B76831819,
		0x0000000006B7A12, 0x0000006B730812A, 0x0000006B72A9290, 0x000A98A832A36B7,
		0x000000000627723, 0x000000620760708, 0x000000019237276, 0x000876198186162,
		0x000000137A17A76, 0x00010818717AA76, 0x0006A70A907A037, 0x0000008A97A876A,
		0x000000000B86684, 0x00000004630636B, 0x00000090184686B, 0x000B36931963946,
		0x0000002A16B8684, 0x00004606B30B12A, 0x0002A902946B4B8, 0x463B36943A32A93,
		0x000000462842823, 0x000000000462042, 0x000438246234190, 0x000000246142194,
		0x0006A1846861813, 0x000000604A06A10, 0xA930396A3438463, 0x0000000006A4A94,
		0x00000000076B495, 0x000000B76495083, 0x00000076B540501, 0x000315354834B76,
		0x00000076BA12954, 0x00049508312A6B7, 0x00040242A54A76B, 0xB76A52325354348,
		0x000000549762723, 0x000687062086954, 0x000540150376362, 0x158485218687628,
		0x000137176A16954, 0x95487010717616A, 0x37A6A703A4A540A, 0x00048A54A7A876A,
		0x000000B896B9695, 0x00009505606336B, 0x00056B01505B0B8, 0x0000005316356B3,
		0x000B569B895B12A, 0x12A56909606B0B3, 0x025A52805B56B85, 0x000A532A36356B3,
		0x000382562528589, 0x000000062960956, 0x628382568180158, 0x000000000216156,
		0x89656938616A136, 0x000560950A06A10, 0x00000000056A038, 0x000000000000A56,
		0x00000000075BB5A, 0x000000830B75B5A, 0x0000001905AB5B7, 0x000831981AB7A75,
		0x000000751B71B12, 0x00072B175127083, 0x0002B7902927975, 0x98232859272B752,
		0x00000037523525A, 0x000A25875852820, 0x0003A25375A3901, 0x752A25872921982,
		0x000000000375135, 0x000000175071087, 0x000000537935903, 0x000000000597987,
		0x000000AB85A8584, 0x000B305AB5B0504, 0x000A458AB84A019, 0x314941B34A45AB4,
		0x0004582B8285251, 0x51B2B145B0B304B, 0xB854582B5059025, 0x0000000002B3945,
		0x00038434535225A, 0x0000004205245A2, 0x01945838535A3A2, 0x0009421925245A2,
		0x000000351853845, 0x000000000105045, 0x000035905853845, 0x000000000000945,
		0x0000009AB49B4B7, 0x0009AB9B7497083, 0x00074B1401B41AB, 0xAB474B1A4348314,
		0x00091292B9B44B7, 0x0832B191B9B7974, 0x000000240B42B74, 0x000324834B42B74,
		0x00074923727929A, 0x207870A279749A7, 0x40A1A074A3A237A, 0x0000000008741A2,
		0x000000713417491, 0x000871081417491, 0x000000000743403, 0x000000000000487,
		0x000000000AB89A8, 0x000000B9A39B309, 0x0000008AB0A801A, 0x000000000B3A31A,
		0x0000009B81B912B, 0x0002B912939B309, 0x00000000080B02B, 0x00000000000032B,
		0x000000A8928A238, 0x0000000000929A2, 0x0001A801828A238, 0x0000000000001A2,
		0x000000000918138, 0x000000000000091, 0x000000000000038, 0x000000000000000
	};

	//Creates a compressed LUT from the original
	//if isCpp is false, it will assume GLSL (with 64-bit ints)
	String compressPaulbourke(bool isCpp);
}